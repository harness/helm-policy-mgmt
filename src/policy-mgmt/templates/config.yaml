apiVersion: v1
kind: ConfigMap
metadata:
  name: policy-mgmt
  namespace: {{ .Release.Namespace }}
data:
  APP_DATABASE_DRIVER: 'postgres'
  APP_HTTP_BIND: ':3000'
  APP_DEBUG: '{{ .Values.config.debug }}'
  APP_ON_PREM: 'true'
  # Protocol needs to be set to empty because service uses redis library which doesn't accept protocol based strings
  {{- $dbContext := deepCopy .Values.global.database.redis }}
  {{- $_ := set $dbContext "protocol" "" }}
  APP_NG_BASE_URL: 'http://ng-manager:7090'
  APP_ACCESS_CONTROL_BASE_URL: 'http://access-control:9006'
  APP_PLATFORM_BASE_URL: 'http://platform-service:9005'
  APP_ENABLE_AUDIT_TRAIL: 'true'
  APP_EVENTS_FRAMEWORK_REDIS_SSL_ENABLED: 'false'
  APP_EVENTS_FRAMEWORK_REDIS_USE_PASSWORD: {{ not .Values.global.database.redis.installed | quote }}
  APP_EVENTS_FRAMEWORK_REDIS_SENTINEL_MASTER_NAME: 'harness-redis'
  APP_EVENTS_FRAMEWORK_REDIS_SENTINEL_URLS: {{ include "harnesscommon.dbconnection.redisConnection" (dict "context" $dbContext) }}
  APP_EVENTS_FRAMEWORK_REDIS_USE_SENTINEL: {{ .Values.global.database.redis.installed | quote }}
  APP_EVENTS_FRAMEWORK_REDIS_URL: {{ include "harnesscommon.dbconnection.redisConnection" (dict "context" $dbContext) }}
  APP_GITX_ENABLED: '{{ .Values.config.gitxEnabled }}'
  APP_GITX_AUTHORITY: '{{ .Values.config.gitxAuthority }}'
  APP_GITX_URL: '{{ .Values.config.gitxUrl }}'
  APP_TOKEN_JWT_SECRET: "HVSKUYqD4e5Rxu12hFDdCJKGM64sxgEynvdDhaOHaTHhwwn0K4Ttr0uoOxSsEVYNrUU="
  APP_INTERNAL_TOKEN_JWT_SECRET: "dOkdsVqdRPPRJG31XU0qY4MPqmBBMk0PTAGIKM6O7TGqhjyxScIdJe80mwh5Yb5zF3KxYBHw6B3Lfzlq"
  APP_NEXT_GEN_MANAGER_JWT_SECRET: "IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM"
  APP_FEATURE_FLAGS_ENABLED: 'false'
