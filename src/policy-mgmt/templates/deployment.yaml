apiVersion: apps/v1
kind: Deployment
metadata:
  name: policy-mgmt
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "policy-mgmt.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end}}
  selector:
    matchLabels:
      {{- include "policy-mgmt.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "policy-mgmt.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "policy-mgmt.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: policy-mgmt
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: policy-mgmt
          ports:
            - name: http
              containerPort: {{.Values.service.port}}
              protocol: TCP
          env: 
            - name:  APP_DATABASE_USER
              value: postgres
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
