# Default values for policy-mgmt.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  loadbalancerURL: https://example.com
  airgap: "false"
  imagePullSecrets: []
  istio:
    enabled: false
    gateway:
      create: false
      port: 443
      protocol: HTTPS
    hosts:
    - '*'
    strict: true
    tls:
      credentialName: ""
    virtualService:
      hosts:
      - '*'

  ingress:
    enabled: false
    objects:
      annotations: {}
  database:
    redis:
      installed: true
      protocol: "redis"
      # --  provide default values if redis.installed is set to false
      hosts:
        - redis:6379
      secretName: "redis-secret"
      userKey: "redis-user"
      passwordKey: "redis-password"
      extraArgs: ""
    postgres:
      installed: true
      dbname: policy-mgmt

replicaCount: 1
image:
  registry: docker.io
  repository: harness/policy-mgmt
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1.63.0"
  digest: ""
  imagePullSecrets: []

## -- initContainer for Harness application waits
waitForInitContainer:
  image:
    registry: docker.io
    repository: harness/helm-init-container
    pullPolicy: IfNotPresent
    tag: "latest"
    digest: ""
    imagePullSecrets: []

config:
  APP_ACCESS_CONTROL_BASE_URL: 'http://access-control:9006'
  APP_DATABASE_USER: postgres
  APP_DATABASE_DRIVER: 'postgres'
  APP_DEBUG: 'true'
  APP_ENABLE_AUDIT_TRAIL: 'true'
  APP_EVENTS_FRAMEWORK_REDIS_SSL_ENABLED: 'false'
  APP_FEATURE_FLAGS_ENABLED: 'false'
  APP_GITX_AUTHORITY: 'false'
  APP_GITX_ENABLED: 'true'
  APP_GITX_URL: 'nginx-ingress-controller-130:443'
  APP_HTTP_BIND: ':3000'
  APP_NG_BASE_URL: 'http://ng-manager:7090'
  APP_ON_PREM: 'true'
  APP_PLATFORM_BASE_URL: 'http://platform-service:9005'

secrets:
  default:
    ET_AGENT_TOKEN: "DUMMY"
  kubernetesSecrets:
    - secretName: ""
      keys:
        ET_AGENT_TOKEN: ""
  secretManagement:
    externalSecretsOperator:
      - secretStore:
          name: ""
          kind: ""
        remoteKeys:
          ET_AGENT_TOKEN:
            name: ""
            property: ""


# imagePullSecrets:
#   - name: gcr-json-key

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ""
      paths:
        - path: /pm
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPU: ""
  targetMemory: ""

nodeSelector: {}

tolerations: []

affinity: {}

# Postgres secret value and key
postgresPassword:
  name: postgres
  key: postgres-password

redis:
  protocol: ""
  hosts: []
  extraArgs: ""
  secrets:
    kubernetesSecrets:
      - secretName: ""
        keys:
          REDIS_USERNAME: ""
          REDIS_PASSWORD: ""
    secretManagement:
      externalSecretsOperator:
        - secretStore:
            name: ""
            kind: ""
          remoteKeys:
            REDIS_USERNAME:
              name: ""
              property: ""
            REDIS_PASSWORD:
              name: ""
              property: ""
database:
  mongo:
    templateharness:
      enabled: false
      protocol: ""
      hosts: []
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""